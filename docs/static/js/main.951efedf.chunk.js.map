{"version":3,"sources":["auth/AuthContext.js","types/types.js","auth/authReducer.js","routers/PrivateRoute.js","components/login/LoginScreen.js","data/heroes.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","selectors/getHeroesByPublisher.js","components/dc/DcScreen.js","components/marvel/MarvelScreen.js","components/heroes/HeroScreen.js","selectors/getHeroById.js","components/ui/Navbar.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroesByName.js","routers/DashboardRoutes.js","routers/PublicRoute.js","routers/AppRouter.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","PrivateRoute","isAuthenticated","Component","component","rest","localStorage","setItem","location","pathname","props","to","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","getItem","name","replace","heroes","HeroCard","id","superhero","alter_ego","first_appearance","characters","style","maxWidth","src","alt","HeroList","publisher","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","key","DcScreen","MarvelScreen","HeroScreen","heroeId","useParams","find","length","push","goBack","Navbar","user","useHistory","activeClassName","exact","SearchScreen","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","reset","handleInputChange","target","value","useForm","searchText","formValues","heroesFiltered","toLocaleLowerCase","getHeroesByName","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","DashboardRoutes","path","PublicRoute","AppRouter","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.951efedf.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext();","\r\n\r\nexport const types = {\r\n    login:  '[auth] login',\r\n    logout: '[auth] logout',\r\n}","import { types } from '../types/types';\r\n\r\nexport const authReducer = (state = {}, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.login:\r\n            return {\r\n                ...action.payload,\r\n                logged: true\r\n            }\r\n\r\n        case types.logout:\r\n            return {\r\n                logged: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    \r\n    localStorage.setItem('lastPath', rest.location.pathname);\r\n\r\n    return (\r\n        <Route {... rest}\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/login\" />)\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useContext } from 'react';\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\nexport const LoginScreen = ({history}) => {\r\n\r\n    const {dispatch} = useContext(AuthContext)\r\n\r\n    const handleLogin = () => {\r\n\r\n        const lastPath = localStorage.getItem('lastPath') || '/';\r\n\r\n        /*Replace a diferencia de Push no nos permite volver al login \r\n        al retroceder la pagina*/\r\n        //history.push('/');\r\n        //history.replace('/');\r\n        dispatch({\r\n            type: types.login,\r\n            payload: {\r\n                name: 'Adan'\r\n            }\r\n        });\r\n\r\n        history.replace(lastPath);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Login</h1>\r\n            <hr />\r\n\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                onClick={handleLogin}\r\n            >\r\n                Login\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const HeroCard = ({\r\n    id,\r\n    superhero,\r\n    alter_ego,\r\n    first_appearance,\r\n    characters,\r\n}) => {\r\n    return (\r\n        <div className=\"card ms-3\" style={{maxWidth: 540}}>\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                   <img src={`./assets/heroes/${id}.jpg`} className=\"card-img\" alt={superhero} />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{superhero}</h5>\r\n                        <p className=\"card-text\">{alter_ego}</p>\r\n                        {\r\n                            (alter_ego !== characters)\r\n                                && <p className=\"card-text\">{characters}</p>\r\n                        }\r\n\r\n                        <p className=\"card-text\">\r\n                            <small className=\"text-muted\">{first_appearance}</small>\r\n                        </p>\r\n                        \r\n                        <Link to={`./hero/${id}`}>\r\n                            Más...\r\n                        </Link>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher'\r\nimport { HeroCard } from './HeroCard';\r\n\r\nexport const HeroList = ({publisher}) => {\r\n    \r\n    //const heroes = getHeroesByPublisher(publisher);\r\n    //Se lanza useMemo unicamente si el publisher cambia\r\n    const heroes = useMemo(() => getHeroesByPublisher(publisher), [publisher]); \r\n\r\n    return (\r\n        <div className=\"card-columns animate__animated animate__fadeIn\">\r\n           {\r\n               heroes.map(hero => (\r\n                   <HeroCard \r\n                       key={hero.id}\r\n                       {...hero}\r\n                    />\r\n               ))\r\n           } \r\n        </div>\r\n    )\r\n}\r\n","import {heroes} from '../data/heroes';\r\n\r\nexport const getHeroesByPublisher = (publisher) => {\r\n\r\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\r\n\r\n    if(!validPublishers.includes(publisher)){\r\n        throw new Error(`Publisher \"${publisher}\" no es correcto`);\r\n    }\r\n\r\n    return heroes.filter(hero => hero.publisher === publisher);\r\n\r\n}","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\n\r\nexport const DcScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>DC Screen</h1>\r\n            <hr />\r\n            <HeroList publisher=\"DC Comics\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\n\r\nexport const MarvelScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>MarvelScreen</h1>\r\n            <hr />\r\n            <HeroList publisher=\"Marvel Comics\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { getHeroById } from '../../selectors/getHeroById';\r\n\r\nexport const HeroScreen = ({history}) => {\r\n    \r\n    //hook que guarda el Id que enviamos desde el link de HeroCard\r\n    const { heroeId } = useParams();\r\n\r\n    const hero = useMemo(() => getHeroById(heroeId), [heroeId]);\r\n\r\n    if(!hero){\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    const handleReturn = () => {\r\n        if(history.length <= 2){\r\n            history.push('/');\r\n        } else {\r\n            history.goBack();\r\n        }\r\n    }\r\n\r\n    const {\r\n        superhero,\r\n        publisher,\r\n        alter_ego,\r\n        first_appearance,\r\n        characters,    \r\n    } = hero;\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-4\">\r\n                <img\r\n                    src={`../assets/heroes/${heroeId}.jpg`}\r\n                    alt={superhero}\r\n                    className=\"img-thumbnail animate__animated animate__fadeInLeft\"\r\n                    />\r\n            </div>\r\n            \r\n            <div className=\"col-8 animate__animated animate__fadeIn\">\r\n                <h3>{superhero}</h3>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\"><b> Alter ego: </b> {alter_ego} </li>\r\n                    <li className=\"list-group-item\"><b> Publisher: </b> {publisher} </li>\r\n                    <li className=\"list-group-item\"><b> First appearance: </b> {first_appearance} </li>\r\n                </ul>\r\n\r\n                <h5>Characters</h5>\r\n                <p>{characters}</p>\r\n\r\n                <button \r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={handleReturn}\r\n                >\r\n                    Return\r\n                </button>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import {heroes} from '../data/heroes';\r\n\r\nexport const getHeroById = (id) => {\r\n\r\n    return heroes.find(hero => hero.id === id);\r\n\r\n}","import React, { useContext } from 'react';\r\nimport { Link, NavLink, useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\n\r\nexport const Navbar = () => {\r\n\r\n    const {user:{name}, dispatch} = useContext(AuthContext);\r\n    const history = useHistory();\r\n\r\n    const handleLogout = () => {\r\n        \r\n        history.replace('/login');\r\n\r\n        dispatch({\r\n            type: types.logout\r\n        });\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                Asociaciones\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <span className=\"nav-item nav-link text-info\">\r\n                        {name}\r\n                    </span>\r\n                    <button \r\n                        className=\"nav-item nav-link btn\" \r\n                        onClick={handleLogout}\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React, { useMemo } from 'react';\r\nimport queryString from 'query-string';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { HeroCard } from '../heroes/HeroCard';\r\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\r\n\r\nexport const SearchScreen = ({history}) => {\r\n    \r\n    const location = useLocation();\r\n    const {q = ''} = useMemo(() => queryString.parse(location.search), [location.search]); \r\n\r\n    const [ formValues, handleInputChange] = useForm({\r\n        searchText: q\r\n    });\r\n    const {searchText} = formValues;\r\n    \r\n    const heroesFiltered = useMemo(() => getHeroesByName(q), [q]);\r\n    \r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n        history.push(`?q=${ searchText }`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Search Screen</h1>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <h4>Search Form</h4>\r\n                    <hr />\r\n                    \r\n                    <form onSubmit={handleSearch}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Find your hero\"\r\n                            className=\"form-control\"\r\n                            name=\"searchText\"\r\n                            autoComplete=\"off\"\r\n                            value={searchText}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn mt-1 btn-block btn-outline-primary\"\r\n                        >\r\n                            Search...\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-7\">\r\n                    <h4>Results</h4>\r\n                    <hr />\r\n\r\n                    {\r\n                        (q === '')\r\n                            &&\r\n                            <div className=\"alert alert-info\">\r\n                                Search a hero\r\n                            </div>\r\n                    }\r\n\r\n                    {\r\n                        (q !== '' && heroesFiltered.length === 0)\r\n                            &&\r\n                            <div className=\"alert alert-danger\">\r\n                                The hero { q } doesn't exist\r\n                            </div>\r\n                    }\r\n\r\n                    {\r\n                        heroesFiltered.map(hero => (\r\n                            <HeroCard \r\n                                key={hero.id}\r\n                                {...hero}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {useState} from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n  \r\n    const reset = () => {\r\n        setValues(initialState)\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n    return [values, handleInputChange, reset];\r\n\r\n}","import { heroes } from '../data/heroes';\r\n\r\nexport const getHeroesByName = (name = '') => {\r\n    \r\n    if(name === ''){\r\n        return [];\r\n    }\r\n\r\n    name = name.toLocaleLowerCase();\r\n    return heroes.filter(hero => hero.superhero.toLocaleLowerCase().includes(name));\r\n\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { DcScreen } from '../components/dc/DcScreen';\r\nimport { MarvelScreen } from '../components/marvel/MarvelScreen';\r\nimport { HeroScreen } from '../components/heroes/HeroScreen';\r\nimport { Navbar } from '../components/ui/Navbar';\r\nimport { SearchScreen } from '../components/search/SearchScreen';\r\n\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <>\r\n            <Navbar />  \r\n\r\n            <div className=\"container mt-2\">\r\n                <Switch>\r\n                    <Route exact path=\"/marvel\" component={MarvelScreen}/>\r\n                    <Route exact path=\"/hero/:heroeId\" component={HeroScreen}/>\r\n                    <Route exact path=\"/dc\" component={DcScreen}/>\r\n                    <Route exact path=\"/search\" component={SearchScreen}/>\r\n\r\n                    <Redirect to=\"/marvel\"/>\r\n                </Switch>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (!isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/\" />)\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useContext } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch\r\n  } from 'react-router-dom';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { LoginScreen } from '../components/login/LoginScreen';\r\nimport { DashboardRoutes } from './DashboardRoutes';\r\nimport { AuthContext } from '../auth/AuthContext';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const {user} = useContext(AuthContext);\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={LoginScreen} \r\n                        isAuthenticated={user.logged}\r\n                    />\r\n                    <PrivateRoute \r\n                        path=\"/\" \r\n                        component={DashboardRoutes} \r\n                        isAuthenticated={user.logged}\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React, { useEffect, useReducer } from 'react'\r\nimport { AuthContext } from './auth/AuthContext';\r\nimport { authReducer } from './auth/authReducer';\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('user')) || {logged: false};\r\n}\r\n\r\nexport const HeroesApp = () => {\r\n    \r\n    const [user, dispatch] = useReducer(authReducer, {}, init);\r\n    \r\n    useEffect(() => {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    }, [user])\r\n\r\n    return (\r\n        <AuthContext.Provider value={{user, dispatch}}>\r\n            <AppRouter />\r\n        </AuthContext.Provider> \r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HeroesApp} from './HeroesApp';\n\nReactDOM.render(\n  <HeroesApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}